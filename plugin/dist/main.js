(()=>{chrome.storage.local;let e=0,t={};const n=e=>{let t=e.indexOf("//")>-1?e.split("/")[2]:e.split("/")[0];return t=t.split(":")[0],t=t.split("?")[0],t},o=async(n,o)=>{e+=o;const s=n in t?parseInt(t[n]):0;t[n]=s+o,chrome.storage.local.set({stats:JSON.stringify(t)}).then((()=>{console.log("Value is set to "+JSON.stringify(t))}))},s=e=>{if("undefined"==typeof browser){const t=n(e.initiator?e.initiator:e.url),s=e.responseHeaders.find((e=>"content-length"===e.name.toLowerCase())),r=parseInt((void 0===s?{value:0}:s).value,10);return o(t,r),{}}let t=browser.webRequest.filterResponseData(e.requestId);return t.ondata=s=>{const r=n(e.originUrl?e.originUrl:e.url);o(r,s.data.byteLength),console.log("event",s),t.write(s.data)},t.onstop=()=>{t.disconnect()},{}},r=async()=>{};let i;chrome.runtime.onConnect.addListener((function(e){e.onDisconnect.addListener((function(){(()=>{const e=JSON.stringify(t);console.log("disconnected"),chrome.storage.local.set({stats:e}).then((()=>{console.log("Value is set to "+e)}))})()}))})),(e=>{if("start"===(e={action:"start"}).action)return console.log("start"),chrome.webRequest.onHeadersReceived.addListener(s,{urls:["<all_urls>"]},["responseHeaders"]),void(i||(i=setInterval(r,6e4)));"stop"===e.action&&(chrome.webRequest.onHeadersReceived.removeListener(s),i&&(clearInterval(i),i=null))})({action:"start"})})();